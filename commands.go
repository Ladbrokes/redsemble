/*
 *   Redsemble - Redis packet assembler
 *   Copyright (c) 2016 Shannon Wynter, Ladbrokes Digital Australia Pty Ltd.
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *   Author: Shannon Wynter <http://fremnet.net/contact>
 */

package main

type redisCommand string

var validRedisCommands = map[string]struct{}{
	"append":            struct{}{},
	"auth":              struct{}{},
	"bgrewriteaof":      struct{}{},
	"bgsave":            struct{}{},
	"bitcount":          struct{}{},
	"bitfield":          struct{}{},
	"bitop":             struct{}{},
	"bitpos":            struct{}{},
	"blpop":             struct{}{},
	"brpop":             struct{}{},
	"brpoplpush":        struct{}{},
	"client":            struct{}{},
	"cluster":           struct{}{},
	"command":           struct{}{},
	"config":            struct{}{},
	"dbsize":            struct{}{},
	"debug":             struct{}{},
	"decr":              struct{}{},
	"decrby":            struct{}{},
	"del":               struct{}{},
	"discard":           struct{}{},
	"dump":              struct{}{},
	"echo":              struct{}{},
	"eval":              struct{}{},
	"evalsha":           struct{}{},
	"exec":              struct{}{},
	"exists":            struct{}{},
	"expire":            struct{}{},
	"expireat":          struct{}{},
	"flushall":          struct{}{},
	"flushdb":           struct{}{},
	"geoadd":            struct{}{},
	"geohash":           struct{}{},
	"geopos":            struct{}{},
	"geodist":           struct{}{},
	"georadius":         struct{}{},
	"georadiusbymember": struct{}{},
	"get":               struct{}{},
	"getbit":            struct{}{},
	"getrange":          struct{}{},
	"getset":            struct{}{},
	"hdel":              struct{}{},
	"hexists":           struct{}{},
	"hget":              struct{}{},
	"hgetall":           struct{}{},
	"hincrby":           struct{}{},
	"hincrbyfloat":      struct{}{},
	"hkeys":             struct{}{},
	"hlen":              struct{}{},
	"hmget":             struct{}{},
	"hmset":             struct{}{},
	"hset":              struct{}{},
	"hsetnx":            struct{}{},
	"hstrlen":           struct{}{},
	"hvals":             struct{}{},
	"incr":              struct{}{},
	"incrby":            struct{}{},
	"incrbyfloat":       struct{}{},
	"info":              struct{}{},
	"keys":              struct{}{},
	"lastsave":          struct{}{},
	"lindex":            struct{}{},
	"linsert":           struct{}{},
	"llen":              struct{}{},
	"lpop":              struct{}{},
	"lpush":             struct{}{},
	"lpushx":            struct{}{},
	"lrange":            struct{}{},
	"lrem":              struct{}{},
	"lset":              struct{}{},
	"ltrim":             struct{}{},
	"mget":              struct{}{},
	"migrate":           struct{}{},
	"monitor":           struct{}{},
	"move":              struct{}{},
	"mset":              struct{}{},
	"msetnx":            struct{}{},
	"multi":             struct{}{},
	"object":            struct{}{},
	"persist":           struct{}{},
	"pexpire":           struct{}{},
	"pexpireat":         struct{}{},
	"pfadd":             struct{}{},
	"pfcount":           struct{}{},
	"pfmerge":           struct{}{},
	"ping":              struct{}{},
	"psetex":            struct{}{},
	"psubscribe":        struct{}{},
	"pubsub":            struct{}{},
	"pttl":              struct{}{},
	"publish":           struct{}{},
	"punsubscribe":      struct{}{},
	"quit":              struct{}{},
	"randomkey":         struct{}{},
	"readonly":          struct{}{},
	"readwrite":         struct{}{},
	"rename":            struct{}{},
	"renamenx":          struct{}{},
	"restore":           struct{}{},
	"role":              struct{}{},
	"rpop":              struct{}{},
	"rpoplpush":         struct{}{},
	"rpush":             struct{}{},
	"rpushx":            struct{}{},
	"sadd":              struct{}{},
	"save":              struct{}{},
	"scard":             struct{}{},
	"script":            struct{}{},
	"sdiff":             struct{}{},
	"sdiffstore":        struct{}{},
	"select":            struct{}{},
	"set":               struct{}{},
	"setbit":            struct{}{},
	"setex":             struct{}{},
	"setnx":             struct{}{},
	"setrange":          struct{}{},
	"shutdown":          struct{}{},
	"sinter":            struct{}{},
	"sinterstore":       struct{}{},
	"sismember":         struct{}{},
	"slaveof":           struct{}{},
	"slowlog":           struct{}{},
	"smembers":          struct{}{},
	"smove":             struct{}{},
	"sort":              struct{}{},
	"spop":              struct{}{},
	"srandmember":       struct{}{},
	"srem":              struct{}{},
	"strlen":            struct{}{},
	"subscribe":         struct{}{},
	"sunion":            struct{}{},
	"sunionstore":       struct{}{},
	"sync":              struct{}{},
	"time":              struct{}{},
	"touch":             struct{}{},
	"ttl":               struct{}{},
	"type":              struct{}{},
	"unsubscribe":       struct{}{},
	"unwatch":           struct{}{},
	"wait":              struct{}{},
	"watch":             struct{}{},
	"zadd":              struct{}{},
	"zcard":             struct{}{},
	"zcount":            struct{}{},
	"zincrby":           struct{}{},
	"zinterstore":       struct{}{},
	"zlexcount":         struct{}{},
	"zrange":            struct{}{},
	"zrangebylex":       struct{}{},
	"zrevrangebylex":    struct{}{},
	"zrangebyscore":     struct{}{},
	"zrank":             struct{}{},
	"zrem":              struct{}{},
	"zremrangebylex":    struct{}{},
	"zremrangebyrank":   struct{}{},
	"zremrangebyscore":  struct{}{},
	"zrevrange":         struct{}{},
	"zrevrangebyscore":  struct{}{},
	"zrevrank":          struct{}{},
	"zscore":            struct{}{},
	"zunionstore":       struct{}{},
	"scan":              struct{}{},
	"sscan":             struct{}{},
	"hscan":             struct{}{},
	"zscan":             struct{}{},
}

func (r redisCommand) Valid() bool {
	if _, ok := validRedisCommands[string(r)]; ok {
		return ok
	}
	return false
}
